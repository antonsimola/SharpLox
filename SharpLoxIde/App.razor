@using SharpLox



@foreach (var example in _examples)
{
    <button @onclick="e => OnSetExample(example)">@example.Key</button>
}
<MonacoEditor @ref="_editor" Id="editor" ConstructionOptions="EditorConstructionOptions"/>
<button @onclick="RunCode">Run code</button>
<p>@_result</p>


@code {
    private MonacoEditor _editor;
    private string _result;
    private IDictionary<string, string> _examples = new Dictionary<string, string>();


    protected override void OnInitialized()
    {
        var fib = @"
fun fib(a) {
    if(a < 2) { 
        return 1;
    }
    
    return fib(a -1) + fib(a -2);    
}

for(var i = 0; i < 20; i = i + 1) {
    print fib(i);
}
";
        _examples = new Dictionary<string, string>() {{ "Fibonacci ", fib }};
    }


    private StandaloneEditorConstructionOptions EditorConstructionOptions(MonacoEditor editor)
    {
        editor.SetValue(_examples.FirstOrDefault().Value);
        return new StandaloneEditorConstructionOptions { AutomaticLayout = true, Language = "",};
    }

    private async Task RunCode()
    {
        var code = await _editor.GetValue();
        var engine =new LoxScriptEngine();
        _result = engine.Evaluate(code);
    }


    private void OnSetExample(KeyValuePair<string, string> example)
    {
        _editor.SetValue(example.Value);
    }

}